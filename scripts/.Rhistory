tidyr::separate(., punch, into = c("Block", "Punch_num"), sep = "_", remove = FALSE) %>%
ggplot(., aes(x = x, y = y)) + geom_point( aes(alpha=ifelse(z==0, "show", "hide"), color = pop, size = freq)) +
theme_void() + xlab("") + ylab("") + theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_alpha_manual(values = c("show" = 1, "hide" = 0)) +
geom_text(x = 11, y = 12.5, label = "5mm") +
geom_segment(x = 10, xend = 15, y = 12, yend = 12) +
scale_color_manual(values  = pop_colors) + scale_size_area(max_size = 8, limits = c(0,1)) + guides(color = "none", alpha = "none")
pairtree_pop_freqs_df %>%
dplyr::filter(pop == "pop_1") %>%
tidyr::separate(., punch, into = c("Block", "Punch_num"), sep = "_", remove = FALSE) %>%
ggplot(., aes(x = x, y = y)) + geom_point( aes(alpha=ifelse(z==0, "show", "hide"), color = pop, size = freq)) +
theme_void() + xlab("") + ylab("") + theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_alpha_manual(values = c("show" = 1, "hide" = 0)) +
geom_text(x = 11, y = 12.5, label = "5mm") +
geom_segment(x = 10, xend = 15, y = 12, yend = 12) +
scale_color_manual(values  = pop_colors) + scale_size_area(max_size = 10, limits = c(0,1)) + guides(color = "none", alpha = "none")
pairtree_pop_freqs_df %>%
dplyr::filter(pop == "pop_1") %>%
tidyr::separate(., punch, into = c("Block", "Punch_num"), sep = "_", remove = FALSE) %>%
ggplot(., aes(x = x, y = y)) + geom_point( aes(alpha=ifelse(z<0, "show", "hide"), color = pop, size = freq)) +
theme_void() + xlab("") + ylab("") + theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_alpha_manual(values = c("show" = 1, "hide" = 0)) +
geom_text(x = 11, y = 12.5, label = "5mm") +
geom_segment(x = 10, xend = 15, y = 12, yend = 12) +
scale_color_manual(values  = pop_colors) + scale_size_area(max_size = 10, limits = c(0,1)) + guides(color = "none", alpha = "none")
new_colors <- pop_colors
new_colors[which(names(pop_colors) != "pop_1")] <- "lightgrey"
ggplot(pairtree_pop_freqs_df, aes(x = punch, y = freq, fill = pop )) +
geom_bar(stat = "identity") + scale_fill_manual(values = new_colors) + theme_classic() + ylab("Frequency") +
xlab("Punch") + coord_flip()
####### Connect w/ RNAseq data ######
library(DESeq2)
library(tidyverse)
library(ggrepel)
library(stringr)
library(pheatmap)
library(EnsDb.Hsapiens.v79)
library(GenomicRanges)
library(statmod)
library(edgeR)
library(DEGreport)
library(ggpubr)
#ensembl genes
raw_counts_data <- readRDS("/Volumes/BALAENA/projects/primary_prostate_spatial/mRNA_seq/analysis/rnaseq_counts/16_027_count_data2.rds")
total_counts <- data.frame("total_counts" = colSums(raw_counts_data$counts),
"sample" = colnames(raw_counts_data$counts))
counts_cpm <- cpm(raw_counts_data$counts)
thresh <- counts_cpm > 0.5
keep <- rowSums(thresh) >= 2
raw_counts_data$counts <- raw_counts_data$counts[keep,]
sample_types <- colnames(raw_counts_data$counts)
sample_types[grepl("F", colnames(raw_counts_data$counts))] <- "normal"
sample_types[!grepl("F", colnames(raw_counts_data$counts))] <- "tumor"
colnames(punches_spatial_coordinates)[1] <- "punch"
sample_data <- data.frame(SampleName = colnames(raw_counts_data$counts),
type = sample_types) %>%
tidyr::extract(SampleName, into = c("punch", "rep"), "(.*)_([^_]+$)", remove = FALSE) %>%
left_join(punches_spatial_coordinates)
ddsMat <- DESeq2::DESeqDataSetFromMatrix(countData = raw_counts_data$counts,
colData = sample_data,
design = ~type)
sample_data_tumor_only <- sample_data %>%
dplyr::filter(type == "tumor")
tumor_counts_data_matrix <- as.data.frame(raw_counts_data$counts) %>%
dplyr::select(-starts_with("F")) %>%
as.matrix
ddsMat_tumor_only <- DESeq2::DESeqDataSetFromMatrix(countData = tumor_counts_data_matrix,
colData = sample_data_tumor_only,
design = ~punch)
vsd_tumor_only <- DESeq2::vst(ddsMat_tumor_only)
vsd <- DESeq2::vst(ddsMat)
a <- DESeq2::plotPCA(vsd, "type") + theme_bw() #+ geom_label_repel(aes(label = name))
a
g <- plotPCA(vsd_tumor_only , "punch") + theme_bw() #+ geom_label_repel(aes(label = name))
g
pca_data <- a$data
pca_data$rep <-str_split_fixed(a$data$name, "_", n = 3)[,3]
pca_data$punch <- paste0(str_split_fixed(a$data$name, "_", n = 3)[,1], str_split_fixed(a$data$name, "_", n = 3)[,2])
ggplot(pca_data, aes(PC1, PC2,alpha=rep, color=type)) + geom_point(size = 3) +
theme_bw() +
scale_alpha_manual(values = c(1, 0.5)) + scale_color_manual(values = c("#e28743", "#1e81b0"))
pca_data_tumor_only <- g$data
pca_data_tumor_only$rep <-str_split_fixed(g$data$name, "_", n = 3)[,3]
pca_data_tumor_only$punch <- paste0(str_split_fixed(g$data$name, "_", n = 3)[,1], str_split_fixed(g$data$name, "_", n = 3)[,2])
ggplot(pca_data_tumor_only, aes(PC1, PC2,alpha=rep)) + geom_point(size = 3) +
theme_classic() + scale_alpha_manual(values = c(1, 0.5))
pca_data_group_punch_tumor_only <- pca_data_tumor_only %>%
dplyr::select(-punch) %>%
dplyr::rename("punch"=group) %>%
group_by(punch) %>%
summarise("PC1" = mean(PC1), "PC2"=mean(PC2))
pairtree_pop_freqs_pca_df <- pairtree_pop_freqs_df %>%
left_join(., pca_data_group_punch_tumor_only, by = "punch")
add_pie_chart_inset_pca <- function(p, graph, pairtree_pop_freqs_pca_df, pie_radius = 1, highlight_punches = NULL) {
pie_chart_data <- pairtree_pop_freqs_pca_df %>%
dplyr::filter(punch == p)
new_pie <- ggpie(pie_chart_data, "freq", fill = "pop") +
scale_fill_manual(values = pop_colors) + theme_void() +
theme(legend.position = "none")
#print(new_pie)
dim_1 <- mean(pie_chart_data$PC1)
dim_2 <- mean(pie_chart_data$PC2)
if ((! is.null(highlight_punches)) & (! p %in% highlight_punches)) {
print("shrinking")
pie_radius <- 0.5 * pie_radius
}
if (is.na(dim_1)) {
return(graph)
} else {
graph <- graph +
annotation_custom(
ggplotGrob(new_pie),
xmin = dim_1 - pie_radius,
xmax = dim_1 + pie_radius,
ymin = dim_2 - pie_radius,
ymax = dim_2 + pie_radius
)
return(graph)
}
}
add_pie_chart_inset_pca <- function(p, graph, pairtree_pop_freqs_pca_df,
pie_radius = 1, highlight_punches = NULL, selected_pop = NULL) {
pie_chart_data <- pairtree_pop_freqs_pca_df %>%
dplyr::filter(punch == p)
# new_pie <- ggpie(pie_chart_data, "freq", fill = "pop") +
#     scale_fill_manual(values = pop_colors) + theme_void() +
#     theme(legend.position = "none")
#print(new_pie)
dim_1 <- mean(pie_chart_data$PC1)
dim_2 <- mean(pie_chart_data$PC2)
# if ((! is.null(highlight_punches)) & (! p %in% highlight_punches)) {
#
#     print("shrinking")
#     pie_radius <- 0.5 * pie_radius
# }
if (! is.null(selected_pop)) {
selected_pop_colors <- pop_colors
selected_pop_colors[which(names(pop_colors) != selected_pop)] <- "lightgrey"
new_pie <- ggpie(pie_chart_data, "freq", fill = "pop", color = "lightgrey", linetype = "dashed") +
scale_fill_manual(values = selected_pop_colors) + theme_void() +
theme(legend.position = "none")
} else {
new_pie <- ggpie(pie_chart_data, "freq", fill = "pop", color = "black") +
scale_fill_manual(values = pop_colors) + theme_void() +
theme(legend.position = "none")
}
if (is.na(dim_1)) {
return(graph)
} else {
graph <- graph +
annotation_custom(
ggplotGrob(new_pie),
xmin = dim_1 - pie_radius,
xmax = dim_1 + pie_radius,
ymin = dim_2 - pie_radius,
ymax = dim_2 + pie_radius
)
return(graph)
}
}
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 3)
}
graph1
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 3, selected_pop = "pop_1")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 3, selected_pop = "pop_1")
}
graph1
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 1, selected_pop = "pop_1")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 1, selected_pop = "pop_1")
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 1, selected_pop = "pop_1")
}
graph1
add_pie_chart_inset_pca <- function(p, graph, pairtree_pop_freqs_pca_df,
pie_radius = 1, highlight_punches = NULL, selected_pop = NULL) {
pie_chart_data <- pairtree_pop_freqs_pca_df %>%
dplyr::filter(punch == p)
# new_pie <- ggpie(pie_chart_data, "freq", fill = "pop") +
#     scale_fill_manual(values = pop_colors) + theme_void() +
#     theme(legend.position = "none")
#print(new_pie)
dim_1 <- mean(pie_chart_data$PC1)
dim_2 <- mean(pie_chart_data$PC2)
# if ((! is.null(highlight_punches)) & (! p %in% highlight_punches)) {
#
#     print("shrinking")
#     pie_radius <- 0.5 * pie_radius
# }
if (! is.null(selected_pop)) {
selected_pop_colors <- pop_colors
selected_pop_colors[which(names(pop_colors) != selected_pop)] <- "lightgrey"
new_pie <- ggpie(pie_chart_data, "freq", fill = "pop", color = "lightgrey", linetype = "dashed") +
scale_fill_manual(values = selected_pop_colors) + theme_void() +
theme(legend.position = "none")
} else {
new_pie <- ggpie(pie_chart_data, "freq", fill = "pop", color = "black") +
scale_fill_manual(values = pop_colors) + theme_void() +
theme(legend.position = "none")
}
if (is.na(dim_1)) {
return(graph)
} else {
graph <- graph +
annotation_custom(
ggplotGrob(new_pie),
xmin = dim_1 - pie_radius,
xmax = dim_1 + pie_radius,
ymin = dim_2 - pie_radius,
ymax = dim_2 + pie_radius
)
return(graph)
}
}
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 1, selected_pop = "pop_1")
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = "pop_1")
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
pop_sel <- "pop_1"
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
pop_sel <- "pop_2"
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
pop_sel <- NULL
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
graph1 <- ggplot(pairtree_pop_freqs_pca_df, aes(x = PC1, y = PC3)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
pairtree_pop_freqs_pca_df,
pca_data_group_punch_tumor_only <- pca_data_tumor_only %>%
dplyr::select(-punch) %>%
dplyr::rename("punch"=group) %>%
group_by(punch) %>%
summarise("PC1" = mean(PC1), "PC2"=mean(PC2), "PC3" = mean(PC3))
pca_data_tumor_only
vsd
assay(vsd)
assays(vsd)
prcomp(assay(vsd))
all_tumor_pca <- prcomp(assay(vsd))
all_tumor_pca
all_tumor_pca$rotation
data.frame("sample" = rownames(all_tumor_pca$rotation),
"PC1" = all_tumor_pca$rotation[,1])
all_tumor_pca <- prcomp(assay(vsd))
all_tumor_pca_df <- data.frame("sample" = rownames(all_tumor_pca$rotation),
"PC1" = all_tumor_pca$rotation[,1],
"PC2" = all_tumor_pca$rotation[,2],
"PC3" = all_tumor_pca$rotation[,3]) %>%
all_tumor_pca_df$punch <- paste0(str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,1], str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,2])
pop_sel <- NULL
all_tumor_pca <- prcomp(assay(vsd))
all_tumor_pca_df <- data.frame("sample" = rownames(all_tumor_pca$rotation),
"PC1" = all_tumor_pca$rotation[,1],
"PC2" = all_tumor_pca$rotation[,2],
"PC3" = all_tumor_pca$rotation[,3])
all_tumor_pca_df$punch <- paste0(str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,1], str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,2])
all_tumor_pca_df
all_tumor_pca_df$punch <- paste0(str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,1], "_", str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,2])
all_tumor_pca_df$punch
all_tumor_pca <- prcomp(assay(vsd_tumor_only))
all_tumor_pca_df <- data.frame("sample" = rownames(all_tumor_pca$rotation),
"PC1" = all_tumor_pca$rotation[,1],
"PC2" = all_tumor_pca$rotation[,2],
"PC3" = all_tumor_pca$rotation[,3])
all_tumor_pca_df$punch <- paste0(str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,1], "_", str_split_fixed(all_tumor_pca_df$sample, "_", n = 3)[,2])
all_tumor_pca_df
all_tumor_pca_df <- all_tumor_pca_df %>%
group_by(punch) %>%
summarise(PC1 = mean(PC1), PC2 = mean(PC2), PC3 = mean(PC3))
all_tumor_pca_df
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC3)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
pairtree_pop_freqs_pca_df_2 <- pairtree_pop_freqs_df %>%
left_join(., all_tumor_pca_df, by = "punch")
pairtree_pop_freqs_pca_df_2
pop_sel <- NULL
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df_2,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df_2,
pie_radius = 0.01, selected_pop = pop_sel)
}
graph1
pop_sel <- "none"
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
pop_sel <- "none"
graph1 <- ggplot(all_tumor_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
pop_sel <- "none"
graph1 <- ggplot(pairtree_pop_freqs_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
help(vst)
pop_sel <- "pop_3"
graph1 <- ggplot(pairtree_pop_freqs_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
pop_sel <- "pop_4"
graph1 <- ggplot(pairtree_pop_freqs_pca_df , aes(x = PC1, y = PC2)) + geom_point(alpha=0) +
theme_classic() + xlab("PC1 (43% variance)") + ylab("PC2 (16% variance)")
for (p in unique(pairtree_pop_freqs_pca_df$punch)) {
graph1 <- add_pie_chart_inset_pca(p = p, graph = graph1,
pairtree_pop_freqs_pca_df = pairtree_pop_freqs_pca_df,
pie_radius = 2, selected_pop = pop_sel)
}
graph1
ggsave(filename = paste0("~/Desktop/pca_", pop_sel, ".png", sep = ""), plot = graph1, height = 3.2, width = 8.6)
pop_sel <- "pop_4"
z_level_1_punches <- pairtree_pop_freqs_df %>%
dplyr::filter(z == 0)
graph4 <- ggplot(pairtree_pop_freqs_df, aes(x = x, y = y)) + geom_point(alpha=0) +
theme_void() + xlab("") + ylab("") + theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_segment(x = 10, xend = 15, y = 12, yend = 12) + geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") + geom_text(x = 11, y = 12.5, label = "5mm")
for (p in unique(z_level_1_punches$punch)) {
graph4 <- add_pie_chart_inset(p = p, graph = graph4, pairtree_pop_freqs_df = pairtree_pop_freqs_df, pie_radius = 1, selected_pop = pop_sel)
}
ggsave(graph4, filename = paste0("~/Desktop/z1_", pop_sel, ".png", sep = ""), height = 4, width = 6.5)
z_level_2_punches <- pairtree_pop_freqs_df %>%
dplyr::filter(z < 0)
graph5 <- ggplot(pairtree_pop_freqs_df, aes(x = x, y = y)) + geom_point(alpha=0) +
theme_void() + xlab("") + ylab("") + theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed")
for (p in unique(z_level_2_punches$punch)) {
graph5 <- add_pie_chart_inset(p = p, graph = graph5, pairtree_pop_freqs_df = pairtree_pop_freqs_df, pie_radius = 1, selected_pop = pop_sel)
}
graph5
ggsave(graph5, filename = paste0("~/Desktop/z2_", pop_sel, ".png", sep = ""), height = 4, width = 6.5)
setwd("~/Documents/PhD/Bedford_lab/spatial-tumor-phylodynamics/scripts")
##summarize_strict_v_sdevo_posteriors.R
growth_rate_posteriors_df <- read_csv("../eden/stats/birth_death_rate_posteriors_estimate_dr.csv")
(tumortree)
library(tumortree)
library(tidyverse)
library(HDInterval)
library(coda)
library(beastio)
library(treeio)
library(ggtree)
library(phangorn)
##summarize_strict_v_sdevo_posteriors.R
growth_rate_posteriors_df <- read_csv("../eden/stats/birth_death_rate_posteriors_estimate_dr.csv")
strict_clock_growth_rate_posteriors_df <- read_csv("../eden/stats/birth_death_rate_posteriors_estimate_dr_strict_clock.csv")
# True versus estimated plots (stat-dependent and strict comparisons,  Figure 3E)
clock_comparison_growth_rate_posteriors_df <- bind_rows(list(growth_rate_posteriors_df, strict_clock_growth_rate_posteriors_df)) %>%
dplyr::mutate(clock_model = factor(clock_model, levels = c('strict', 'state_dependent'))) %>%
dplyr::arrange(clock_model)
clock_colors <- c("state_dependent" = "#3A5A40", "strict" = "#ECA966")
clock_rate_comparison_posteriors_plot <- clock_comparison_growth_rate_posteriors_df %>%
dplyr::filter(n==50, minBirthRateESS > 100) %>%
ggplot(., aes(x=true_birth_rate_diff_weighted, y=mean_birth_rate_diff, color = clock_model)) +
geom_point(aes(color = clock_model)) +
theme_classic() +
geom_abline(slope=1, intercept = 0, linetype = "dashed", color = "black") +
geom_errorbar(aes(ymin = birthRate_hdi95_lower, ymax = birthRate_hdi95_upper, color=clock_model),
alpha = 0.6, size = 1) +
xlab("True birth rate difference (edge - center)") +
ylab("Estimated birth rate difference (edge - center)") +
scale_color_manual(values = clock_colors) +
theme(legend.position = "none") +
theme(text=element_text(size=15))
clock_rate_comparison_posteriors_plot
# MSE plots (Figure 3F)
clock_comparison_sample_size_results_summary <- clock_comparison_growth_rate_posteriors_df %>%
dplyr::filter(minBirthRateESS > 200) %>%
group_by(n, clock_model) %>%
summarise("mse" = mean((mean_birth_rate_diff - true_birth_rate_diff_weighted)^2, na.rm = TRUE),
"se_mse" = sd((mean_birth_rate_diff - true_birth_rate_diff_weighted)^2, na.rm = TRUE) / sqrt(n()))
clock_comparison_sample_size_mse  <- clock_comparison_sample_size_results_summary %>%
dplyr::filter(as.numeric(n) <= 100) %>%
ggplot(., aes(x = n, y = mse)) +
geom_point(aes(color=clock_model), size = 0.75) +
theme_classic() + xlab("Sample size") + ylab("MSE of edge - center birth rate difference") +
geom_errorbar(aes(ymin = mse - se_mse, ymax = mse + se_mse, color = clock_model)) +
theme(text = element_text(size = 15)) +
scale_x_continuous(breaks = pretty(clock_comparison_sample_size_results_summary$n, n = 10)) +
scale_color_manual(values = clock_colors) + geom_smooth(aes(color=clock_model), linetype="dashed", se = FALSE, size = 0.5)+
theme(legend.position = "none")
clock_comparison_sample_size_mse
# MSE plots (Figure 3F)
clock_comparison_sample_size_results_summary <- clock_comparison_growth_rate_posteriors_df %>%
dplyr::filter(minBirthRateESS > 200) %>%
group_by(n, clock_model) %>%
summarise("mse" = mean((mean_birth_rate_diff - true_birth_rate_diff_weighted)^2, na.rm = TRUE),
"se_mse" = sd((mean_birth_rate_diff - true_birth_rate_diff_weighted)^2, na.rm = TRUE) / sqrt(n()),
"N" = n())
clock_comparison_sample_size_results_summary
hist(clock_comparison_sample_size_results_summary$N)
ggplot(clock_comparison_sample_size_results_summary, aes(x=n, y=N)) + geom_point()
sum(clock_comparison_sample_size_results_summary$N)
max(clock_comparison_sample_size_results_summary$N)
min(clock_comparison_sample_size_results_summary$N)
mean(clock_comparison_sample_size_results_summary$N)
